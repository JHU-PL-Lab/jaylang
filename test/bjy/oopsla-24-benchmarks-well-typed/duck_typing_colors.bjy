(*** (
  (features (Higher_order_functions OOP_style Refinement_types Dependent_types Records))
) *)
let Color : { t : type } =
  { t =
    { int | fun i -> i >= 0 && i < 256 }
  }

let Point : { t : type } =
  { t =
    { x : int
    ; y : int
    ; get_deg : unit -> int
    }
  }

let Colored_point : { t : type } =
  { t =
    { x : int
    ; y : int
    ; get_deg : unit -> int
    ; c : Color.t }
  }

let obj : Colored_point.t =
  let ob =
    fun self ->
      { x = 10
      ; y = 20
      ; get_deg = 
        fun _ ->
          let s = (self self) in
          let tan = s.y / s.x in
          tan - (tan * tan * tan) / 3 + (tan * tan * tan * tan * tan) / 5 (* approx arctan with taylor expansion *)
      ; c = 255 }
  in
  ob ob

let get_color (p : Colored_point.t) : Color.t =
  p.c

let result = get_color obj