(*** (
  (features (Refinement_types Dependent_types Return_type))
  (reasons (Refinement_types Dependent_types Return_type))
  (speed Fast)
  (typing Ill_typed)
) *)

let f x g = g (x + 1)

let h (x <- int) (y <- { a : int | a > x }) : { a : int | a > y } = 
  y + 1

let main (n : int) : { c : int | c < 0 } =
  if (n >= 0) 
  then f n (h n)
  else 1
    