(*** (
  (features (Recursive_functions Refinement_types Match))
  (reasons (Recursive_functions Refinement_types))
  (speed Fast)
  (typing Ill_typed)
) *)

let rec makelist n = 
  if n == 0 then []
  else n :: makelist (n-1)

let getHead l = 
  match l with
  | [] -> assert false
  | hd :: tl -> hd
  end

let main (n : { a : int | a >= 0}) : { a : int | a > 0} =
  let l = makelist n in
  if n > 0
  then getHead l
  else 0
  