(***
  (
    (features (Refinement_types Mu_types Variants Records Recursive_functions))
    (reasons (Refinement_types Mu_types))
    (speed Fast)
    (typing Ill_typed)
  )
*)

(* error is that x has 6 on left of root value 2; which is not a bst *)

let tree_type = Mu t.
  | `Node of { left : t ; right : t ; item : int }
  | `Leaf of { leaf : bool }

let rec is_bst t = 
  match t with
  | `Node node ->
    let check_left = 
      match node.lt with
      | `Node lnode -> node.item >= lnode.item
      | `Leaf leaf -> true
      end
    in
    if check_left then
      let check_right =
        match node.right with
        | `Node rnode -> node.item <= rnode.item
        | `Leaf leaf -> true
        end
      in
      if check_right
      then
        if is_bst node.left then is_bst node.right else false
      else
        false
    else
      false
  | `Leaf leaf -> true
  end

let x : { tree_type | is_bst } = 
  `Node { left = 
          `Node { left = `Leaf { leaf = true }
                ; right = `Leaf { leaf = true }
                ; item = 6  (* ERROR: this item should be switched with the other *)
                }
        ; right = `Leaf { leaf = true }
        ; item = 2
        }
