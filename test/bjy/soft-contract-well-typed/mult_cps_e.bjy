(***
  (
    (features (Refinement_types Recursive_functions Higher_order_functions))
    (speed Slow)
    (typing Well_typed)
  )
*)

let acc z m =
  fun r -> m (z + r)

let rec mult x y k =
  if x <= 0 || y <= 0
  then k 0
  else x + mult x (y - 1) (acc x k)

let check w =
  w

let main (n : int) : int =
  mult 100 n check
