(*** (
  (features (Recursive_functions Refinement_types Match))
) *)

let rec makelist n = 
  if n == 0 then []
  else n :: (makelist (n-1))

let getHead l = 
  match l with
  | [] -> assert false
  | hd :: tl -> hd
  end

let main (n : { int | fun a -> a > 0}) : { int | fun a -> a > 0} =
  let l = makelist n in
  if n > 0 then getHead l
  else 0
    