(***
  (
    (features (Records Higher_order_functions OOP_style Usage_error))
    (reasons (Records OOP_style Usage_error))
    (speed Fast)
    (typing Ill_typed)
  )
*)

let result_type = { result : int }

let city =
  { population : int
  ; show_population : bool -> bool }

let sight =
  { is_open : bool }

let visitor =
  { visit_city : city -> result_type
  ; visit_sight : sight -> result_type }

let client =
  { accept : visitor -> result_type }

let make_city_client (i : int) : client =
  let s = 
    fun self ->
      { population = i
      ; show_population = fun _ -> (self self).population == 0 } (* arbitrary code in place of side effect  *)
  in
  { accept = fun v -> v.visit_city (s s) }

let make_sight_client (b : bool) : client =
  let s = { is_open = b } in
  { self = s ; accept = fun v -> v.visit_city s } (* ERROR: should be visit_sight *)
