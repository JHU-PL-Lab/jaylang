(*** (
  (features (Intersection_types Higher_order_functions Subtyping Type_casing Refinement_types Return_type Match))
  (reasons (Intersection_types Return_type))
  (speed Fast)
  (typing Ill_typed)
) *)
(* subtyping of refined intersection type. *)

let t : type = { ((`Int of int) -> int) & ((`Bool of bool) -> bool) | fun x -> x (`Bool true) }

(* this is a subtype of t *)
let f : t =
  fun x ->
    match x with
    | `Bool b -> true
    | `Int i -> i
    | _ -> 1 :: 2 :: []
    end

let g (h : t) : t =
  let k (i : int) : int =
    h (`Int i)
  in
  k (* ERROR: this is not a subtype of t *)

let x = g f (* well-typed function application here. Error is in body of g *)
