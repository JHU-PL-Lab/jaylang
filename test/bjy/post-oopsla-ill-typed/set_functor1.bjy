(***
  (
    (features (Polymorphic_types Dependent_arrows Modules Parametric_types Recursive_functions Usage_error))
    (reasons (Usage_error))
    (speed Fast)
    (typing Ill_typed)
  )
*)

let F (tf <- type -> type) (a <- type) : let t = tf a in sig
  val empty : unit -> t
  val add   : a -> t -> t
end -> sig
  val of_list : list a -> t
end = fun r -> struct
  let of_list ls =
    let rec loop acc ls =
      match ls with
      | [] -> acc
      | hd :: tl -> loop (r.add hd acc) tl
      end
    in
    loop r.empty ls (* ERROR: forgot to apply empty record to r.empty *)
end
