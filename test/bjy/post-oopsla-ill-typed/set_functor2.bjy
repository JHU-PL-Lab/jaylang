(***
  (
    (features (Polymorphic_types Dependent_arrows Modules Parametric_types Recursive_functions Other))
    (reasons (Other)) ; because limitation
    (speed Fast)
    (typing Ill_typed)
  )
*)

let F (tf <- type -> type) (a <- type) : sig
  val empty : unit -> tf a (* ERROR: all of these `tf a` are different *)
  val add   : a -> tf a -> tf a
end -> sig
  val of_list : list a -> tf a
end = fun r -> struct
  let of_list ls =
    let rec loop acc ls =
      match ls with
      | [] -> acc
      | hd :: tl -> loop (r.add hd acc) tl
      end
    in
    loop (r.empty {}) ls
end
