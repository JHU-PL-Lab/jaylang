(***
  (
    (features (Refinement_types Recursive_functions Higher_order_functions Return_error))
    (reasons (Refinement_types Return_error))
    (speed Fast)
    (typing Ill_typed)
  )
*)
(* error is fixed when `n` param for `main` is non-negative *)

let rec f g x =
  if x <= 0
  then g x
  else f (fun x -> f g x) (g x)

let main (n : int) : { i : int | i >= 0 } =
  f (fun x -> x + 1) n (* ERROR: could be negative when `n` is negative *)
