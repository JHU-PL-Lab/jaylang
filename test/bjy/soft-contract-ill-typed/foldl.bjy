(***
  (
    (features (Recursive_functions Higher_order_functions Usage_error))
    (reasons (Higher_order_functions Usage_error))
    (speed Fast)
    (typing Ill_typed)
  )
*)

let rec foldl (f : int -> bool -> bool) (z : bool) (xs : list int) : bool =
  match xs with
  | [] -> z
  | x :: rest -> foldl f (f z x) rest (* ERROR: should have `(f x z)` *)
  end
  