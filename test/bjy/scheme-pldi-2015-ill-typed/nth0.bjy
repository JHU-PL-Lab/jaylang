(*** (
  (features (Recursive_functions Assertions Match))
  (reasons (Assertions))
  (speed Fast)
  (typing Ill_typed)
) *)

let rec nth n xs =
  if n == 1 (* ERROR: should be `n == 0` *)
  then 
    match xs with
    | hd :: _ -> hd
    end
  else
    let tl =
      match xs with
      | _ :: tl -> tl
      end
    in
    nth (n - 1) tl

let rec mk_list n =
  if n < 0
  then []
  else n :: mk_list (n - 1)

let main (n : int) : int =
  let xs = mk_list n in
  match xs with
  | [] -> 0
  | _ -> nth 0 xs
  end
