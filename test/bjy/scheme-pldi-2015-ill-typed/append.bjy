(***
  (
    (features (Polymorphic_types Refinement_types Recursive_functions))
    (reasons (Refinement_types))
    (speed Fast)
    (typing Ill_typed)
  )
*)

let is_nonempty ls =
  match ls with
  | [] -> false
  | _ -> true
  end

let rec append (type a_) (a : list a_) (b : list a_) : { list a_ | is_nonempty } =
  match a with
  | [] -> b (* ERROR: `b` could be empty *)
  | hd :: tl -> hd :: append a_ tl b
  end
