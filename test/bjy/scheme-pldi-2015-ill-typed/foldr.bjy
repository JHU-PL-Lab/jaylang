(***
  (
    (features (Recursive_functions Higher_order_functions Usage_error))
    (reasons (Higher_order_functions Usage_error))
    (speed Fast)
    (typing Ill_typed)
  )
*)

let rec foldr (f : int -> bool -> bool) (z : bool) (xs : list bool) : bool =
  match xs with
  | [] -> z
  | xx :: xxs -> f (foldr f z xxs) xx (* ERROR: should be `f xx (foldr f z xss)` and `xs` should be `int list` *)
  end