(***
  (
    (features (Polymorphic_types Recursive_functions Higher_order_functions))
    (speed Slow)
    (typing Well_typed)
  )
*)

(* (* 1 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 2 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 3 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 4 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 5 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 6 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 7 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 8 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 9 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 10 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end

(* (* 11 *) *)
let rec map (type a b) (ls : list a) (f : a -> b) : list b =
  match ls with
  | [] -> []
  | hd :: tl -> f hd :: map a b tl f
  end
