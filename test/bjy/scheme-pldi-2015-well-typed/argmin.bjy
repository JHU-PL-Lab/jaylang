(***
  (
    (features (Polymorphic_types Refinement_types Recursive_functions Higher_order_functions))
    (speed Slow)
    (typing Well_typed)
  )
*)
(* no apparent error, and there is no ill-typed version of this program *)

let is_cons xs =
  match xs with
  | hd :: tl -> true
  | _ -> false
  end

let rec argmin_acc f a b xs =
  match xs with
  | [] -> a
  | hd :: tl ->
    if b < f hd
    then argmin_acc f a b tl
    else argmin_acc f hd (f hd) tl
  end

let argmin (type a_) (f : a_ -> int) (xs : { list a_ | is_cons }) : a_ =
  match xs with
  | hd :: tl -> argmin_acc f hd (f hd) tl
  end
